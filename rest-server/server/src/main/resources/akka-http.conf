akka.http {

  server {
    verbose-error-messages = on
    server-header = ActionMLRouter/${akka.http.version}
    max-connections = 1000
    max-connections = ${?HARNESS_MAX_CONNECTIONS}
    pipelining-limit = 16
    pipelining-limit = ${?HARNESS_MAX_REQUESTS}
  }

  parsing {
    # The limits for the various parts of the HTTP message parser.
    max-uri-length = 5k
    max-method-length = 64
    max-response-reason-length = 64
    max-header-name-length = 64
    max-header-value-length = 8k
    max-header-count = 64
    max-chunk-ext-length = 256
    max-chunk-size = 1m
  }
}

akka.http.routing {
  verbose-error-messages = on
}

es-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 64
    fixed-pool-size = ${?HARNESS_ELASTIC_CLIENT_POOL_SIZE}
  }
  throughput = 1
}

//es-dispatcher {
//  # Dispatcher is the name of the event-based dispatcher
//  type = Dispatcher
//  # What kind of ExecutionService to use
//  executor = "fork-join-executor"
//  # Configuration for the fork join pool
//  fork-join-executor {
//    # Min number of threads to cap factor-based parallelism number to
//    parallelism-min = 2
//    # Parallelism (threads) ... ceil(available processors * factor)
//    parallelism-factor = 2.0
//    # Max number of threads to cap factor-based parallelism number to
//    parallelism-max = 10
//  }
//  # Throughput defines the maximum number of messages to be
//  # processed per actor before the thread jumps to the next actor.
//  # Set to 1 for as fair as possible.
//  throughput = 100
//}
